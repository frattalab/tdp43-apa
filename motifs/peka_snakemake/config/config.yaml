# 'comparison_name', 'regions_bed', 'foreground_key' columns
# comparison_name - unique identifier to track comparison of interest
# regions_bed - BED of single nucleotide coordinates of two groups of events that wish to compare
# foreground_key - string present in 'Name' field of BED file that identifies 'foreground' events
sample_table: config/sample_table.csv

# base output directory for pipeline run
base_output_dir: output_peka/

# path to genome fasta
genome: data/GRCh38.primary_assembly.genome.fa
# path to genome fasta index
genome_idx: data/GRCh38.primary_assembly.genome.fa.fai

# genome segmentation file produced as output of "iCount segment" function
# (NB: for our hacky use case of looking across the whole genome, pre-provided GTF is sufficient)
regions_gtf: data/sorted.regions.gtf.gz
# kmer length
kmer: 5
# window around thresholded crosslinks (in our case genomic landmarks) for finding enriched kmers (PEKA default: 20)
window: 20
# window aound enriched kmers to calculate distribution (PEKA default: 150)
distal_window: 150

# choose to run PEKA on a specific region only, to specify multiple regions enter them space separated (default: only )
specific_region: "genome"

# controls the number of outputs, can be True or False. Recommend setting to True for our use case to make custom plot
alloutputs: True

# Percentile for considering thresholded crosslinks. Accepts a value between 0 and 1 [0, 1). 
# Percentile 0.7 means that a cDNA count threshold is determined at which >=70 percent of the crosslink sites within the region have a cDNA count equal or below the threshold.
# Thresholded crosslinks have cDNA count above the threshold. [DEFAULT 0.7]
# for our purposes, cDNA count is irrelevant (so want treat all background equally), so set to 0
percentile: 0

              
